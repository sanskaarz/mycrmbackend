const express = require('express');
const usercontroller = require('../controllers/user.controller');
const router = express.Router();
const validate = require('../middlewares/validate');
const authValidation = require('../validations/auth.validation');
const Authenticate = require('../middlewares/auth');
const multer = require('multer')
const { fileUpload } = require('../middlewares/multer');

router.post('/login', validate(authValidation.login), usercontroller.login);
router.post('/register', fileUpload('profileImage', { multiple: false, maxCount: 1, fileTypes: ['jpg', 'jpeg', 'png', 'jfif'], fileSizeLimit: 5242880 }), usercontroller.register)
router.post('/forgotPassword', usercontroller.forgotPassword)
router.post('/verifyOtp', usercontroller.verifyOtp)
router.post('/getUserDetail', Authenticate, usercontroller.getUserDetail)
router.put('/resetPassword', usercontroller.resetPassword)
router.post('/getAllUsers', Authenticate, usercontroller.getAllUsers)
router.put('/updateUser', fileUpload('profileImage', { multiple: false, maxCount: 1, fileTypes: ['jpg', 'jpeg', 'png', 'jfif'], fileSizeLimit: 5242880 }), Authenticate, usercontroller.updateUser)
router.post('/deleteUser', Authenticate, usercontroller.deleteUser)
router.post('/addDepartment', Authenticate, usercontroller.addDepartment)
router.post('/addDesignation', Authenticate, usercontroller.addDesignation)
router.get('/getAllDepartments', Authenticate, usercontroller.getAllDepartments)
router.post('/getDesignationsByType', Authenticate, usercontroller.getDesignationsByType)
router.put('/updateDesignation', Authenticate, usercontroller.updateDesignation)
router.put('/updateDepartment', Authenticate, usercontroller.updateDepartment)
router.post('/deleteDepartmentById', Authenticate, usercontroller.deleteDepartmentById)
router.post('/deleteDesignationById', Authenticate, usercontroller.deleteDesignationById)
router.post('/addLeadStatus', Authenticate, usercontroller.addLeadStatus)
router.post('/getAllLeadStatuses', Authenticate, usercontroller.getAllLeadStatuses)
router.put('/updateLeadStatus', Authenticate, usercontroller.updateLeadStatus)
router.post('/deleteLeadStatus', Authenticate, usercontroller.deleteLeadStatus)
router.post('/addLeadSource', Authenticate, usercontroller.addLeadSource)
router.post('/getAllLeadSources', Authenticate, usercontroller.getAllLeadSources)
router.put('/updateLeadSource', Authenticate, usercontroller.updateLeadSource)
router.post('/deleteLeadSource', Authenticate, usercontroller.deleteLeadSource)
router.post('/createLead', Authenticate, usercontroller.createLead)
router.get('/getLeadDetail/:id', Authenticate, usercontroller.getLeadDetail)
router.post('/getAllLeads', Authenticate, usercontroller.getAllLeads)
router.put('/updateLead', Authenticate, usercontroller.updateLead)
router.post('/deleteLead', Authenticate, usercontroller.deleteLead)
router.get('/getCompanySizes', Authenticate, usercontroller.getCompanySizes)
router.post('/createCompanyCategory', Authenticate, usercontroller.createCompanyCategory)
router.post('/getAllCompanyCategories', Authenticate, usercontroller.getAllCompanyCategories)
router.put('/updateCompanyCategory', Authenticate, usercontroller.updateCompanyCategory)
router.post('/deleteCompanyCategory', Authenticate, usercontroller.deleteCompanyCategory)
router.post('/createDropDown', Authenticate, usercontroller.createDropDown)
router.post('/getDropDownByType', Authenticate, usercontroller.getDropDownByType)
router.put('/updateDropDown', Authenticate, usercontroller.updateDropDown)
router.post('/deleteDropDown', Authenticate, usercontroller.deleteDropDown)
router.post('/createLeadTaskCategory', Authenticate, usercontroller.createLeadTaskCategory)
router.post('/createLeadTaskSubCategory', Authenticate, usercontroller.createLeadTaskSubCategory)
router.post('/getAllLeadTaskCategory', Authenticate, usercontroller.getAllLeadTaskCategory)
router.post('/getLeadTaskSubCategoryByType', Authenticate, usercontroller.getLeadTaskSubCategoryByType)
router.put('/updateLeadTaskCategory', Authenticate, usercontroller.updateLeadTaskCategory)
router.put('/updateLeadTaskSubCategory', Authenticate, usercontroller.updateLeadTaskSubCategory)
router.post('/deleteLeadTaskCategory', Authenticate, usercontroller.deleteLeadTaskCategory)
router.post('/deleteLeadTaskSubCategory', Authenticate, usercontroller.deleteLeadTaskSubCategory)
router.post('/createLeadActionLog', Authenticate, usercontroller.createLeadActionLog)
router.post('/getAllLeadActionLogs', Authenticate, usercontroller.getAllLeadActionLogs)
router.post('/getAllLeadCount', Authenticate, usercontroller.getAllLeadCount)
router.post('/sendMail', Authenticate, fileUpload('attachment', { multiple: true, maxCount: 25, fileSizeLimit: 26214400 }), usercontroller.sendMail)
router.post('/getLeadActivityLogs', Authenticate, usercontroller.getLeadActivityLogs)
router.post('/dataForReports', Authenticate, usercontroller.dataForReports)
router.post('/downloadReportInExcel', Authenticate, usercontroller.downloadReportInExcel)
router.post('/createActionType', Authenticate, usercontroller.createActionType)
router.post('/getAllActionTypes', Authenticate, usercontroller.getAllActionTypes)
router.put('/updateActionType', Authenticate, usercontroller.updateActionType)
router.post('/deleteActionType', Authenticate, usercontroller.deleteActionType)
router.post('/createActionSubType', Authenticate, usercontroller.createActionSubType)
router.post('/getActionSubTypesByType', Authenticate, usercontroller.getActionSubTypesByType)
router.put('/updateActionSubType', Authenticate, usercontroller.updateActionSubType)
router.post('/deleteActionSubType', Authenticate, usercontroller.deleteActionSubType)
router.post('/createEmailTemplate', Authenticate, fileUpload('attachment', { multiple: true, maxCount: 25, fileSizeLimit: 26214400 }), usercontroller.createEmailTemplate)
router.post('/getAllEmailTemplates', Authenticate, usercontroller.getAllEmailTemplates)
router.post('/getEmailTemplateDetail', Authenticate, usercontroller.getEmailTemplateDetail)
router.put('/updateEmailTemplate', Authenticate, fileUpload('attachment', { multiple: true, maxCount: 20, fileSizeLimit: 1008246 }), usercontroller.updateEmailTemplate)
router.post('/deleteEmailTemplate', Authenticate, usercontroller.deleteEmailTemplate)
router.post('/deleteEmailTemplateImage', Authenticate, usercontroller.deleteEmailTemplateImage)
router.get('/downloadSampleExcelForCreateLead', Authenticate, usercontroller.downloadSampleExcelForCreateLead)
router.post('/downloadLeadDataInExcel', Authenticate, usercontroller.downloadLeadDataInExcel)
router.post('/createLeadsByExcel', Authenticate, fileUpload('file', { multiple: false, maxCount: 1, fileTypes: ['xlsx'], fileSizeLimit: 52428800 }), usercontroller.createLeadsByExcel)
router.get('/downloadSampleExcelForCreateUser', Authenticate, usercontroller.downloadSampleExcelForCreateUser)
router.post('/createUsersByExcel', Authenticate, fileUpload('file', { multiple: false, maxCount: 1, fileTypes: ['xlsx'], fileSizeLimit: 52428800 }), usercontroller.createUsersByExcel)

module.exports = router